services:
  # Frontend Service
  frontend-service:
    build: ./frontend-service
    container_name: frontend-service
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:${API_GATEWAY_PORT:-3000}
      - VITE_APP_NAME=Sistema de Microservicios
      - VITE_APP_VERSION=1.0.0
    depends_on:
      - api-gateway
    networks:
      - microservices-network
    volumes:
      - ./frontend-service:/app
      - /app/node_modules
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "${API_GATEWAY_PORT:-3000}:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:4001
      - CALENDAR_SERVICE_URL=http://calendar-service:3003
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    restart: unless-stopped

  # Calendar Service
  calendar-service:
    build: ./calendar-service
    container_name: calendar-service
    ports:
      - "${CALENDAR_SERVICE_PORT:-3003}:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${CALENDAR_DB_NAME:-calendar_service_db}
    depends_on:
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./calendar-service:/app
      - /app/node_modules
    restart: unless-stopped

  # Auth Service
  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "${AUTH_SERVICE_PORT:-4001}:4001"
    environment:
      - NODE_ENV=development
      - PORT=4001
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - AUTH_DB_NAME=${AUTH_DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
    networks:
      - microservices-network
    volumes:
      - ./auth-service:/app
      - /app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge
