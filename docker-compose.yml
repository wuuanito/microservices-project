services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "${API_GATEWAY_PORT:-3000}:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:4001
      - TICKETS_SERVICE_URL=http://ticket-service:4003
      - SOLICITUDES_SERVICE_URL=http://solicitudes-service:4000
      - CALENDAR_SERVICE_URL=http://calendar-service:3003
      - INFORMATICA_SERVICE_URL=http://informatica-service:3001
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    restart: unless-stopped

  # Calendar Service
  calendar-service:
    build: ./calendar-service
    container_name: calendar-service
    ports:
      - "${CALENDAR_SERVICE_PORT:-3003}:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${CALENDAR_DB_NAME:-calendar_service_db}
    depends_on:
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./calendar-service:/app
      - /app/node_modules
    restart: unless-stopped

  # Auth Service
  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "${AUTH_SERVICE_PORT:-4001}:4001"
    environment:
      - NODE_ENV=development
      - PORT=4001
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - AUTH_DB_NAME=${AUTH_DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
    networks:
      - microservices-network
    volumes:
      - ./auth-service:/app
      - /app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # Ticket Service
  ticket-service:
    build: ./ticket-service
    container_name: ticket-service
    ports:
      - "${TICKET_SERVICE_PORT:-4003}:4003"
    environment:
      - NODE_ENV=development
      - PORT=4003
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - TICKET_DB_NAME=${TICKET_DB_NAME:-ticket_service_db}
      - AUTH_SERVICE_URL=http://auth-service:4001
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=*
    depends_on:
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./ticket-service:/app
      - /app/node_modules
    restart: unless-stopped

  # Solicitudes Service
  solicitudes-service:
    build: ./solicitudes-service
    container_name: solicitudes-service
    ports:
      - "${SOLICITUDES_SERVICE_PORT:-4000}:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${SOLICITUDES_DB_NAME:-solicitudes_service_db}
      - CORS_ORIGIN=*
    depends_on:
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./solicitudes-service:/app
      - /app/node_modules
      - ./solicitudes-service/uploads:/app/uploads
    restart: unless-stopped

  # Informatica Service
  informatica-service:
    build: ./informatica-service
    container_name: informatica-service
    ports:
      - "${INFORMATICA_SERVICE_PORT:-3001}:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${INFORMATICA_DB_NAME:-informatica_db}
      - CORS_ORIGIN=*
    depends_on:
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./informatica-service:/app
      - /app/node_modules
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge
